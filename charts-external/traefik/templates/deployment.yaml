{{ if .Values.enabled }}
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: traefik
spec:
  # seems there are some problems with more then 1 replica, need to investigate further
  replicas: 1
  revisionHistoryLimit: 5
  {{ if .Values.gcePersistentDiskName }}
  strategy:
    type: Recreate
  {{ end }}
  template:
    metadata:
      labels:
        app: traefik
      annotations:
        # update the pod on traefik configuration changes
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      containers:
      - name: traefik
        image: traefik:v1.7
        ports:
        - {containerPort: 80}
        - {containerPort: 443}
        resources: {"requests": {"cpu": "100m", "memory": "50Mi"}}
        volumeMounts:
        - name: etc-traefik
          mountPath: /etc-traefik
        - name: traefik-acme
          mountPath: /traefik-acme
          subPath: {{ .Values.acmeVolumeMountSubPath | default "traefik-acme" | quote }}
        args:
        - "--configFile=/etc-traefik/traefik.toml"
        {{ if eq .Values.letsencrypt.dnsProvider "route53" }}
        env:
        - name: AWS_ACCESS_KEY_ID
          value: {{ .Values.letsencrypt.AWS_ACCESS_KEY_ID | quote }}
        - name: AWS_REGION
          value: {{ .Values.letsencrypt.AWS_REGION | quote }}
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.letsencrypt.awsSecretName }}
              key: AWS_SECRET_ACCESS_KEY
        {{ end }}
        {{ if eq .Values.letsencrypt.dnsProvider "cloudflare" }}
        env:
        - name: CLOUDFLARE_EMAIL
          value: {{ .Values.letsencrypt.CLOUDFLARE_EMAIL | quote }}
        - name: CLOUDFLARE_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.letsencrypt.cfSecretName }}
              key: CLOUDFLARE_API_KEY
        {{ end }}
      volumes:
      - name: etc-traefik
        configMap:
          name: etc-traefik
      - name: traefik-acme
        {{ if .Values.gcePersistentDiskName }}
        gcePersistentDisk:
          pdName: {{ .Values.gcePersistentDiskName | quote }}
        {{ else if .Values.nfsServer }}
        nfs:
          server: {{ .Values.nfsServer }}
          path: "/"
        {{ else }}
        emptyDir: {}
        {{ end }}
{{ end }}
